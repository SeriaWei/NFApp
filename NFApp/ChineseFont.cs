using Iot.Device.Ssd13xx;
using System;
using System.Collections.Generic;
using System.Text;

namespace NFApp
{
    internal class ChineseFont : IFont
    {
        public override byte Width => 16;
        public override byte Height => 16;
        private static readonly byte[][] _fontTable = 
            {

new byte[]{0x30,0x04,0x0E,0x02,0x88,0x3F,0xFF,0x24,0x9C,0x24,0xAA,0x3F,0xC9,0x24,0x80,0x24,0x88,0x3F,0x3F,0x02,0x24,0x16,0x22,0x4D,0x14,0x7D,0x88,0x04,0x94,0x44,0x63,0x78},
new byte[]{0x08,0x00,0x88,0x3F,0x88,0x20,0x88,0x20,0xAA,0x3F,0x9A,0x20,0x8A,0x20,0x89,0x3F,0x08,0x00,0x88,0x48,0x88,0x2B,0x94,0x18,0xA4,0x08,0xA2,0x4A,0x82,0x49,0x81,0x70},
new byte[]{0x08,0x02,0x08,0x04,0xC8,0x7F,0x48,0x40,0x3F,0x0A,0x08,0x11,0x8C,0x24,0x1C,0x0A,0x2A,0x11,0x8A,0x20,0x49,0x5F,0x08,0x11,0x08,0x11,0x08,0x11,0x08,0x1F,0x08,0x11},

        };
        public override byte[] this[char character]
        {
            get
            {
                byte t = (byte)character;
                switch (t)
                {
                    case 79: return _fontTable[0];
                    case 28: return _fontTable[1];
                    case 149: return _fontTable[2];
                    default: return _fontTable[0];
                }
            }
        }
    }
}
